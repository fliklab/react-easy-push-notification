---
description: 
globs: 
alwaysApply: false
---
## 핵심 기능 요구사항

화면에는 스케줄 리스트가 존재하며, 추가/삭제할 수 있다.
(외부 API는 일단 없다.)
스케줄은 제목, 내용, 예정시간으로 이루어져있다.
예정시간이 되면 푸쉬 알림을 받고자 한다.

- 스케줄 관리를 위한 기본적인 상태관리 구조를 갖춰야 한다.(redux 기반)
- 성능 및 메모리 최적화(메모리 누수 방지)를 고려하여 구현해야 한다.
- 디자인은 Material Design 원칙을 따르며, MUI 컴포넌트를 사용해도 좋다.
- util, type, component, hook등을 별도 파일로 구분한다.

**기본 푸쉬알림 기능**
- 브라우저 푸쉬알림 권한 요청 및 관리
- 즉시 알림 발송 (로컬 알림)
- 서버 푸쉬알림 지원 (Service Worker 기반)
- 알림 클릭 이벤트 핸들링
- 알림 표시/숨김 제어

**직관적인 API 설계**
- 메소드명과 옵션이 명확하고 이해하기 쉬움
- 기본값 제공으로 최소 설정만으로도 동작
- 체이닝 방식 지원

## 기술적 요구사항

**브라우저 호환성**
- Chrome, Firefox, Safari, Edge 최신 버전 지원
- 구형 브라우저 우아한 품질 저하 (graceful degradation)
- 모바일 브라우저 지원

**성능 요구사항**
- 번들 사이즈 최적화 (< 50KB gzipped)
- Tree-shaking 지원
- 지연 로딩 지원
- 메모리 누수 없는 정리 작업

**보안 요구사항**
- HTTPS 환경에서만 동작
- XSS 공격 방지를 위한 입력값 검증
- 민감한 정보 로깅 방지

## 개발자 경험 요구사항

**문서화**
- 상세한 API 문서
- 실제 사용 예제 코드
- 마이그레이션 가이드
- 트러블슈팅 가이드

**개발 도구**
- TypeScript 타입 정의 완전 제공
- 개발 모드에서 유용한 경고 메시지
- 디버깅을 위한 로그 옵션

**테스트**
- 단위 테스트 커버리지 90% 이상
- 통합 테스트 제공
- 실제 브라우저 환경 테스트

## 확장성 요구사항

**플러그인 시스템**
- 커스텀 알림 제공자 추가 가능
- 미들웨어 패턴 지원
- 이벤트 훅 시스템

**다양한 환경 지원**
- Next.js 최적화
- 서버사이드 렌더링 지원
- Progressive Web App 호환

**국제화**
- 다국어 메시지 지원
- 날짜/시간 형식 로케일 지원
- RTL 언어 지원
